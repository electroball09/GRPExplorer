@using System.Runtime.InteropServices
@using System.Diagnostics

@inject SessionId sid

<MudLayout>
    <MudAppBar onmousedown="@AppbarClick" Fixed>
        <MudText Typo="Typo.h5" Class="ml-3">GRiPE</MudText>
        <MudSpacer />
        <MudStack Class="pa-0" Spacing="0">
            <MudStack Row>
                <MudSpacer />
                <MudPaper Class="pa-0 ma-0">
                    <MudIconButton Class="pl-4 pr-4" Size="@Size.Small" Icon="@Icons.Filled.ExpandMore" OnClick="Minimize" />
                    <MudIconButton Class="pl-4 pr-4" Size="@Size.Small" Icon="@MaximizeIcon" OnClick="Maximize" />
                    <MudIconButton Class="pl-4 pr-4" Size="@Size.Small" Icon="@Icons.Material.Filled.Close" Color="Color.Error" OnClick="CloseApp" />
                </MudPaper>
            </MudStack>
            <MudStack Row Spacing="2">
                <MudText Class="pt-1" Typo="Typo.caption">sid: @sid.ToString()</MudText>
                <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Filled.Settings" Color="Color.Inherit" Edge="Edge.End" />
            </MudStack>
        </MudStack>
    </MudAppBar>
    <MudMainContent Style="fixed">
        <GRiPE.UI.Pages.Index />
    </MudMainContent>
</MudLayout>

<MudThemeProvider Theme="@theme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

@code {
    [DllImport("kernel32.dll", SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    static extern bool AllocConsole();

    [DllImport("User32.dll", CallingConvention = CallingConvention.StdCall, SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    private static extern bool ShowWindow([In] IntPtr hWnd, [In] int nCmdShow);

    [Parameter]
    public Action? QuitFunc { get; set; }
    [Parameter]
    public Func<bool>? MaximizeFunc { get; set; }
    [Parameter]
    public Action? MinimizeFunc { get; set; }
    [Parameter]
    public Action? DragFunc { get; set; }

    private string MaximizeIcon = Icons.Filled.Fullscreen;

    protected override void OnInitialized()
    {
        AllocConsole();
        IntPtr handle = Process.GetCurrentProcess().MainWindowHandle;
        ShowWindow(handle, 6);
    }

    private void AppbarClick()
    {
        //DragFunc!();
    }

    private void CloseApp()
    {
        QuitFunc!();
    }

    private void Minimize()
    {
        MinimizeFunc!();
    }

    private void Maximize()
    {
        MaximizeIcon = MaximizeFunc!() ? Icons.Filled.FullscreenExit : Icons.Filled.Fullscreen;
    }

    private void Drag()
    {
        DragFunc!();
    }

    MudTheme theme = new MudTheme()
        {
            Palette = DocsDarkPalette
        };

    private static readonly Palette DocsDarkPalette  = new()
        {
            Primary = "#0d183b",
            Surface= "#1c1c1c",
            Background = "#121212",
            BackgroundGrey = "#151521",
            AppbarText = "#92929f",
            AppbarBackground = "#0d183b",
            DrawerBackground = "#0d0f12",
            ActionDefault = "#74718e",
            ActionDisabled = "#9999994d",
            ActionDisabledBackground = "#605f6d4d",
            TextPrimary = "#b2b0bf",
            TextSecondary = "#92929f",
            TextDisabled = "#ffffff33",
            DrawerIcon = "#92929f",
            DrawerText = "#92929f",
            GrayLight = "#2a2833",
            GrayLighter = "#1e1e2d",
            Info = "#4a86ff",
            Success = "#3dcb4e",
            Warning = "#ccc039",
            Error = "#e00429",
            LinesDefault = "#33323e",
            TableLines = "#33323e",
            Divider = "#292838",
            OverlayLight = "#1e1e2d80"

        };
}